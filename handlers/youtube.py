import os

from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text, state
from aiogram.dispatcher.filters.state import StatesGroup, State

from create_bot import bot, dp
from keyboard import kb_client
from keyboard import kb_user
from data_base import sqllite_db
from func_youtube import yotube_result, playlist_video_id
from youtube_down import get_youtube_title, get_yotybe_hd, get_yotybe_360, get_yotybe_720, get_youtube_thumb, \
    get_youtube_piple, to_valid, worker, get_audio


class FSMClient(StatesGroup):
    down_st = State()
    down_st_audio = State()
    title_st = State()
    thumb_st = State()
    quantity_st = State()


#@dp.message_handler(commands=['start', 'help'])
async def command_start(message: types.Message):
        await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=kb_user)



#@dp.message_handler(Text(equals='üìπ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ'))
async def upload_video(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É')
    await FSMClient.down_st.set()


#@dp.message_handler(state=FSMClient.down_st)
async def thanks_video_upload(message: types.Message, state: FSMContext):
    res = message.text
    VID_ID = ''
    to_valid(res)
    await bot.send_message(message.from_user.id, '–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ...')
    print(VID_ID)
    get_yotybe_360(res)
    await bot.send_video(message.from_user.id, open('video.mp4', 'rb'))
    await state.reset_state()
    os.remove('video.mp4')  # —É–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ –Ω–∞ –¥–∏—Å–∫–µ –≤ —Ü–µ–ª—è—Ö –∂–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞


#@dp.message_handler(Text(equals='üìπ –°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ'))
async def upload_audio(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É')
    await FSMClient.down_st_audio.set()


#@dp.message_handler(state=FSMClient.down_st_audio)
async def thanks_video_audio(message: types.Message, state: FSMContext):
    res = message.text
    VID_ID = ''
    to_valid(res)
    await bot.send_message(message.from_user.id, '–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞—É–¥–∏–æ...')
    get_audio(res)
    await bot.send_audio(message.from_user.id, open('audio.mp4', 'rb'))
    await state.reset_state()
    os.remove('audio.mp4')  # —É–¥–∞–ª—è–µ–º –∞—É–¥–∏–æ –Ω–∞ –¥–∏—Å–∫–µ –≤ —Ü–µ–ª—è—Ö –∂–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞


#@dp.message_handler(Text(equals='üéì –ù–∞–∑–≤–∞–Ω–∏–µ'))
async def upload_video_title(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É')
    await FSMClient.title_st.set()


#@dp.message_handler(state=FSMClient.title_st)
async def thanx_video_title(message: types.Message, state: FSMContext):
        res = message.text
        async with state.proxy() as proxy:  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
            proxy['title_st1'] = res
        title = get_youtube_title(proxy['title_st1'])
        await message.answer(f'–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ: {title}')
        await state.reset_state()


#@dp.message_handler(Text(equals='üöÄ –ü—Ä–µ–≤—å—é'))
async def upload_video_thumb(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É')
    await FSMClient.thumb_st.set()


#@dp.message_handler(state=FSMClient.thumb_st)
async def thanx_video_thumb(message: types.Message, state: FSMContext):
        res = message.text
        async with state.proxy() as proxy:  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
            proxy['thumb_st1'] = res
        thumb = get_youtube_thumb(proxy['thumb_st1'])
        #await message.answer(f'–ü—Ä–µ–≤—å—é –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ: {thumb}')
        await bot.send_photo(message.from_user.id, f'{thumb}')
        await state.reset_state()

@dp.message_handler(Text(equals='üíπ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã'))
async def upload_video_quatity(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É')
    await FSMClient.quantity_st.set()


@dp.message_handler(state=FSMClient.quantity_st)
async def thanx_video_quatity(message: types.Message, state: FSMContext):
        res = message.text
        async with state.proxy() as proxy:  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
            proxy['quantity_st1'] = res
        quantity = get_youtube_piple( proxy['quantity_st1'])
        await message.answer(f'–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ: {quantity}')
        await state.reset_state()



def register_handlers_youtube(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_message_handler(upload_video, Text(equals='üìπ –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ'))
    dp.register_message_handler(thanks_video_upload, state=FSMClient.down_st)
    dp.register_message_handler(upload_audio, Text(equals='üé∂ –°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ'))
    dp.register_message_handler(thanks_video_audio, state=FSMClient.down_st_audio)
    dp.register_message_handler(upload_video_title, Text(equals='üéì –ù–∞–∑–≤–∞–Ω–∏–µ'))
    dp.register_message_handler(thanx_video_title, state=FSMClient.title_st)
    dp.register_message_handler(upload_video_thumb, Text(equals='üöÄ –ü—Ä–µ–≤—å—é'))
    dp.register_message_handler(thanx_video_thumb, state=FSMClient.thumb_st)
    dp.register_message_handler(upload_video_quatity, Text(equals='üíπ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã'))
    dp.register_message_handler(thanx_video_quatity, state=FSMClient.quantity_st)



